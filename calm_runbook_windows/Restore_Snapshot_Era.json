{"status":{},"contains_secrets":false,"product_version":"3.2.2","spec":{"description":"","resources":{"endpoints_information":[],"endpoint_definition_list":[],"credential_definition_list":[{"username":"administrator","description":"","type":"PASSWORD","secret":{"attrs":{"is_secret_modified":false,"secret_reference":{}}},"name":"administrator"}],"runbook":{"task_definition_list":[{"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Does Snapshot name exist"}],"name":"a5c4a200_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Does Snapshot name exist","attrs":{"failure_child_reference":{"kind":"app_task","name":"5db5892a_FAILURE_META"},"exit_status":[],"script":"# Set the vars needed by the Calm Runbook variables\n$era_ip=\"@@{era_ip}@@\"\n$era_user=\"@@{era_user}@@\"\n$era_passwd=\"@@{era_password}@@\"\n$initials=\"@@{initials}@@\"\n$snapshot_name=\"@@{snapshotname}@@\"\n$Header=@{\"Authorization\" = \"Basic \"+[System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($era_user+\":\"+$era_passwd));}\n\n# Getting the HTTPS working with self-signed certificates\nadd-type @\"\n    using System.Net;\n    using System.Security.Cryptography.X509Certificates;\n    public class TrustAllCertsPolicy : ICertificatePolicy {\n        public bool CheckValidationResult(\n            ServicePoint srvPoint, X509Certificate certificate,\n            WebRequest request, int certificateProblem) {\n            return true;\n        }\n    }\n\"@\n[System.Net.ServicePointManager]::CertificatePolicy = New-Object TrustAllCertsPolicy\n\nWrite-Host \"Checking if the snapshot given exists\"\n# Get the snapshots in Era\n$APIParams = @{\n    method=\"GET\"\n    Uri=\"https:\/\/\"+$era_ip+\"\/era\/v0.9\/snapshots\"\n    ContentType=\"application\/json\"\n    Header = $Header\n}\ntry{\n    $response=(Invoke-RestMethod @APIParams)\n}catch{\n    sleep 10 # Sleeping 3 minutes before progressing\n    $response=(Invoke-RestMethod @APIParams)\n}\n$snapshot_id=($response | where-object {$_.name -Match \"$snapshot_name\"}).id\n\nif ($snapshot_id -eq $null){\n\texit 1\n}else{\n\texit 0\n}\n","login_credential_local_reference":{"kind":"app_credential","name":"administrator"},"success_child_reference":{"kind":"app_task","name":"7dde19bc_SUCCESS_META"},"type":"","command_line_args":"","script_type":"npsscript"},"timeout_secs":"0","type":"DECISION","variable_list":[]},{"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Snapshot Exists"},{"kind":"app_task","name":"Restore snaphot "}],"name":"7dde19bc_SUCCESS_META","attrs":{"type":""},"timeout_secs":"0","type":"META","variable_list":[]},{"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Snapshot Exists","attrs":{"exit_status":[],"script":"Write-Host \"Snapshot with name @@{snapshotname}@@ found\"","script_type":"npsscript","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"administrator"}},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Restore snaphot ","attrs":{"exit_status":[],"script":"# Set the vars needed by the Calm Runbook variables\n$era_ip=\"@@{era_ip}@@\"\n$era_user=\"@@{era_user}@@\"\n$era_passwd=\"@@{era_password}@@\"\n$snapshot_name=\"@@{snapshotname}@@\"\n$initials=\"@@{initials}@@\"\n\n$Header=@{\"Authorization\" = \"Basic \"+[System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($era_user+\":\"+$era_passwd));}\n\n# Getting the HTTPS working with self-signed certificates\nadd-type @\"\n    using System.Net;\n    using System.Security.Cryptography.X509Certificates;\n    public class TrustAllCertsPolicy : ICertificatePolicy {\n        public bool CheckValidationResult(\n            ServicePoint srvPoint, X509Certificate certificate,\n            WebRequest request, int certificateProblem) {\n            return true;\n        }\n    }\n\"@\n[System.Net.ServicePointManager]::CertificatePolicy = New-Object TrustAllCertsPolicy\n\n# Get the snapshots in Era and find the correct uuid for the database\n$APIParams = @{\n    method=\"GET\"\n    Uri=\"https:\/\/\"+$era_ip+\"\/era\/v0.9\/snapshots\"\n    ContentType=\"application\/json\"\n    Header = $Header\n}\ntry{\n    $response=(Invoke-RestMethod @APIParams)\n}catch{\n    sleep 10 # Sleeping 3 minutes before progressing\n    $response=(Invoke-RestMethod @APIParams)\n}\n\n$snapshot_id=($response | where-object {$_.name -Match \"$snapshot_name\"}).id\n\n# Get the uuid of the database\n$APIParams = @{\n    method=\"GET\"\n    Uri=\"https:\/\/\"+$era_ip+\"\/era\/v0.9\/databases\"\n    ContentType=\"application\/json\"\n    Header = $Header\n}\ntry{\n    $response=(Invoke-RestMethod @APIParams)\n}catch{\n    sleep 10 # Sleeping 3 minutes before progressing\n    $response=(Invoke-RestMethod @APIParams)\n}\n$database_id=($response | where-object {$_.name -Match \"$sinitials-FiestaDB-Win\"}).id\n\n# Create Payload for snapshot restore\n$Payload=@\"\n{\n    \"snapshotId\": \"$snapshot_id\",\n    \"latestSnapshot\": null,\n    \"userPitrTimestamp\": null,\n    \"actionArguments\": [\n      {\n        \"name\": \"sameLocation\",\n        \"value\": \"true\"\n      }\n    ]\n  }\n\n\"@\n\n# Fire the restore of the database\n$APIParams = @{\n    method=\"POST\"\n    Uri=\"https:\/\/\"+$era_ip+\"\/era\/v0.9\/databases\/\"+$database_id+\"\/restore\"\n    ContentType=\"application\/json\"\n    Body=$Payload\n    Header = $Header\n}\ntry{\n    $response=(Invoke-RestMethod @APIParams)\n}catch{\n    sleep 10 # Sleeping 3 minutes before progressing\n    $response=(Invoke-RestMethod @APIParams)\n}\n$operation_id=$response.operationId\n\necho $operation_id\n\nStart-Sleep 30\n\n# Small loop so we wait for the registration to happen\n$APIParams = @{\n    method=\"GET\"\n    Uri=\"https:\/\/\"+$era_ip+\"\/era\/v0.9\/operations\/\"+$operation_id\n    ContentType=\"application\/json\"\n    Header = $Header\n}\ntry{\n    $response=(Invoke-RestMethod @APIParams)\n}catch{\n    sleep 10 # Sleeping 3 minutes before progressing\n    $response=(Invoke-RestMethod @APIParams)\n}\n\n$counter=0\n\nwhile ($response.status -ne 5 -and $response.status -ne 4){\n    Write-Host \"Restore is still in progress.. Sleeping 1 minute before retrying ($counter\/15).\"\n    start-sleep 60\n    if ($counter -lt 15){\n        $response=(Invoke-RestMethod @APIParams)\n    }else{\n        Write-Host \"We waited 15 minutes and the Database has not been restored. Exiting...\"\n        exit 1\n    }\n    $counter++\n}\nif ($response.status -eq 5){\n    Write-Host \"Restore has been successfull.\"\n    exit 0\n}else{\n    Write-Host \"Restore has not been successfull. Exiting\"\n    exit 1\n}","script_type":"npsscript","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"administrator"}},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Snapshot does not exist"}],"name":"5db5892a_FAILURE_META","attrs":{"type":""},"timeout_secs":"0","type":"META","variable_list":[]},{"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Snapshot does not exist","attrs":{"exit_status":[],"script":"Write-Host \"Snapshot with name @@{snapshotname}@@ not found\"\nWrite-Host \"The Runbook can not progress\"","script_type":"npsscript","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"administrator"}},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"780456bb_runbook","main_task_local_reference":{"kind":"app_task","name":"a5c4a200_dag"},"variable_list":[{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"initilas","value":"","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"snapshotname","value":"","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"SECRET","name":"era_password","value":"","label":"","attrs":{"is_secret_modified":false,"secret_reference":{},"type":"SECRET"},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"era_user","value":"","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"era_ip","value":"","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}}]},"client_attrs":{},"default_target_reference":{"kind":"app_endpoint","name":"xyz-mssql"}},"name":"Restore Snapshot Era"},"api_version":"3.0","metadata":{"last_update_time":"1621335697363970","kind":"runbook","spec_version":16,"creation_time":"1621331908643848","name":"Restore Snapshot Era"}}